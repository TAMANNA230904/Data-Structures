Given an array of integers. Find if there is a subarray (of size at-least one) with 0 sum. 
You just need to return true/false depending upon whether there is a subarray present with 0-sum or not.
Printing will be taken care by the driver code.


//{ Driver Code Starts
// A C++ program to find if there is a zero sum
// subarray
#include <bits/stdc++.h>
using namespace std;



// } Driver Code Ends
class Solution{
    public:
    //Complete this function
    //Function to check whether there is a subarray present with 0-sum or not.
    bool subArrayExists(int arr[], int n)
    {
     int prefixsum=0;
     unordered_map<int,int> mp;
     for(int i=0;i<n;i++){
         prefixsum+=arr[i];
         
         if(prefixsum==0 || mp.find(prefixsum)!=mp.end()){
             return true;
         }
         mp[prefixsum]++;
     }
     return false;
    }
};

//{ Driver Code Starts.
// Driver code
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++)
	    cin>>arr[i];
	    Solution obj;
	    	if (obj.subArrayExists(arr, n))
		cout << "Yes\n";
	else
		cout << "No\n";
	}
	return 0;
}
// } Driver Code Ends
