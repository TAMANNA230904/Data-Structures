Given an integer array nums, return the length of the longest strictly increasing 
subsequence
.

 class Solution {
public:
int solve(vector<int>& nums,int index){
    int n=nums.size();
    if(n<=1)
    return 0;
int ans=0;
    for(int i=index+1;i<nums.size();i++){
        if(nums[i]>nums[index])
        ans=max(ans,1+solve(nums,i));
    }
    return ans;
}

int solvemem(vector<int>& nums,int index,vector<int> &dp){
    int n=nums.size();
    if(n<=1)
    return 0;
    if(dp[index]!=-1)
    return dp[index];
    int ans=0;
    for(int i=index+1;i<nums.size();i++){
        if(nums[i]>nums[index])
        ans=max(ans,1+solvemem(nums,i,dp));
    }
    return dp[index]=ans;
}
  
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        int ans=0;
        vector<int> dp(n+1,-1);
        for(int i=0;i<n;i++){
         ans=max(ans,1+solvemem(nums,i,dp));
        }
        return ans;
    }
};
