//A derangement is an arrangement of array such that no element uis present at its correct position.Count the no. of possible dearangements for array of length N having nos. from 0 to n-1;


#define MOD 1000000007
#include<vector>
long long int solveMem(int n, vector<long long int> &dp){
   if(n==1)
   return 0;
   if(n==2)
   return 1;

   if(dp[n]!=-1)
   return dp[n];
  
  dp[n]=((n-1)%MOD)*((solveMem(n-2,dp)%MOD)+(solveMem(n-1,dp)%MOD))%MOD;
  return dp[n];
}

long long int countDerangements(int n) {
   //base case
//    if(n==1)
//    return 0;
//    if(n==2)
//    return 1;
//   long long int a=countDerangements(n-2);
//   long long int b=countDerangements(n-1);
//   long long int ans=((n-1)%MOD)*(a%MOD+b%MOD)%MOD;
     vector<long long int> dp(n+1,-1);
     return solveMem(n,dp);
}
