Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n.

class Solution {
public:
int solveTab(int n){
   vetor<int> dp(n+1,0);
   dp[0]=dp[1]=1;
  for(int i=2'i<=n;i++){
      for(int j=1;j<=i;j++){
         dp[i]+=dp[j]*dp[i-j];
}
}
return dp[n];
}

}
    int numTrees(int n) {
        if(n<=1)
        return 1;
        int ans=0;
        for(int i=1;i<=n;i++)
        {
            ans+=numTrees(i-1)*numTrees(n-i);
        }
        return ans;
    }
};

